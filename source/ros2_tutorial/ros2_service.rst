******************************
サービスの実行をしてみよう
******************************

ROS2でのサービスについて、AKARIを使って解説していきます。

.. note::

   | こちらはROS2を使ったバージョンです。
   | ROSに慣れている方、使ってみたい方はこちらを推奨します。
   | ROSの使用、未使用の環境切り替え方法は :doc:`../troubleshoot/ros_switch` を参照してください。

.. note::

   新規ターミナルを起動する際に下記のターミナルの機能選択画面が表示される場合、本ページではすべて「2:ROS2」を選択します。
   2を入力し、enterを押してください。

   .. image:: ../images/terminal_function.png


==============================================
サービスについて
==============================================

サービスのおさらいです。

| **サービス(service)**
|  双方向の送信/応答をする方法です。
|  要求があった時に応答する **サーバ(server)** と、要求を行う **クライアント(client)** がいます。
|  サーバはクライアントからサービスのリクエスト(request)があった時にのみレスポンス(response)を行い、クライアントはサーバからのresponseを取得できます。
|  一対一の通信です。

   .. image:: ../images/ros2_service.gif
      :scale: 30%

| AKARIではGPIOやディスプレイの制御などを、サービスの呼び出しにより実行しています。
| まずはAKARIで呼び出せるサービスを一覧で確認してみましょう。
| ターミナルを立ち上げて下記のコマンドを実行します。

.. code-block:: bash

   ros2 service list

下記のように現在用意されているサービス名の一覧が表示されます。

   .. image:: ../images/service_list.png
      :scale: 80%

これらのサービスを実行してみましょう。


==============================================
サービスをコールしてみよう
==============================================

| サービスを実行することをコール(call)といいます。
| 今回はサービスのコールを試してみましょう。
| サービスのコールをする方法は色々ありますが、rqtを使うと便利です。
| ターミナルを立ち上げて下記のコマンドを実行します。

.. code-block:: bash

   ros2 run rqt_service_caller rqt_service_caller

下記のような画面が立ち上がります。

   .. image:: ../images/rqt_service_caller.png
      :scale: 80%

| 下記の手順で操作します。
| 1. 「service」欄からコールしたいサービス名を選びます。今回は「/set_display_color」を選びます。
| これはAKARIボディー部のM5のディスプレイの背景色を変えるサービスです。
| 2. 下のrequest欄にサービスのreequestの内容一覧が出てきます。Topic欄がリクエストできるデータ名、Type欄がリクエストの型、Expressionがリクエストする内容です。
| ここでは、colorというデータがString型で呼び出せるという意味です。ここではExpressionに色の名前を書くと、その色に背景色を変更してくれます。
| 今回は、Expression欄に「red」と打ってみましょう。
| 3. callボタンを押すとサービスのコールを実行します。
| 4. AKARIのディスプレイ色が赤一色に変化したと思います。また、下のresponce欄のresultにtrueという結果が出力されるはずです。
| これは、サービスのコールが成功したという意味です。

   .. image:: ../images/rqt_service_caller_call.jpg
      :scale: 80%

| 上記のExpression欄を「yellow」「green」「blue」などに変えてコールを試してみてください。その色に変わります。
| サービスとトピックの大きな違いとして、このresponceが返ってくるという点が挙げられます。
| コマンドを実行した結果が確認したい場合は、サービスを使います。
| AKARIの場合は、上記のようなディスプレイの出力やGPIOの制御などの指令を出すものは、全てサービス化されています。
| 使えるサービスの一覧は、:doc:`../spec/soft_base`にまとめてあります。
| 次の章では、サンプルアプリを見ながら、アプリ内でのサービスのコールの方法を解説します。

|
:doc:`ros2_service_app` へ進む

:doc:`ros2_topic_app` へ戻る
