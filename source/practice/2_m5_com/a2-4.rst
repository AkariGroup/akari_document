.. highlight:: python
    :linenothreshold: 10

******************************
A2-4.PWM出力の制御(回答編)
******************************

回答
========

| **A2-4.テストヘッドのpwmout0のLEDを0-250まで10刻みで明るくしていく処理を書きましょう。**
| **明るさを変化させるごとに0.5秒停止する処理をいれてください。**
| **250になったら明るさを0にしてから終了してください。**

以下はコード例です。問題文を満たしていれば、これと同じでなくても問題ありません。

ファイルの場所: akari_practice/2_m5_com/answer/a2-4_pwmout.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q2-4.テストヘッドのpwmout0のLEDを0-250まで10刻みで明るくしていく処理を書きましょう。
    明るさを変化させるごとに0.5秒停止する処理をいれてください。
    250になったら明るさを0にしてから終了してください。
    ヒント1: set_pwmout (int pin_id, int val)という関数でpwmoutの出力を制御できます。
            pin_idは0、valに値を入れることでON,OFFできます。
    ヒント2: for文を使って0-250まで10ずつ値を変化させるループ処理を書いてみましょう。
            書き方はいくつかありますが、
                for i in range(start, end, step):
            を使うのがいいでしょう。これは数値iがstartからendまで、stepずつ増加するループ処理です。
    """

    # M5と通信する際はm5serial_server_pyのライブラリをインポートする。
    from m5serial_server_py.m5serial_server_py import M5SerialServer
    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time


    def main() -> None:
        """
        メイン関数
        """

        # M5SerialServerのインスタンスを作成する。
        m5 = M5SerialServer()

        ### ここから問題  ###
        # iを0から250まで10ずつ増加させる。
        for i in range(0, 250, 10):
            # pwmout0の出力0をiにする。
            m5.set_pwmout(0, i)
            time.sleep(0.5)
        # ループ処理が終了したらpwmout0の出力0を0にする。
        m5.set_pwmout(0, 0)
        ### ここまで  ###


    if __name__ == '__main__':
        main()


解説
========
**31-32行目:**

.. code-block:: python

    # iを0から250まで10ずつ増加させる。
    for i in range(0, 250, 10):

for文を使って変数iを変化させていきます。iはpwmout0の明るさとして与えるので、0から250まで10ずつ変化させます。

|
**33-34行目:**

.. code-block:: python

    # dout0をON
    m5.set_pwmout(0, i)

これまでの問題と同様、28行目でm5という名前でM5SerialServer()のインスタンスを作成しているので、m5.set_pwmout()という形で書きます。

pin_idは0、valはfor文で変化させるiを使います。iが10ずつ増加するので、この値を引数にします。

|
**35行目:**

.. code-block:: python

    time.sleep(0.5)

0.5秒間停止させるように問題文で支持されているので、sleepを使って0.5秒停止します。

|
**36-37行目:**

.. code-block:: python

    # ループ処理が終了したらpwmout0の出力0を0にする。
    m5.set_pwmout(0, 0)

ループが完了したあとに出力を0にするよう指示されているので、for文の外にset_pwmout()を書きます。

pwmout0を0にするため、pin_idは0、valは0です。


実行結果
========
answerディレクトリ内のファイルを実行してみましょう

.. code-block:: bash

    python a2-4_pwmout.py

pwmout0のLEDが0.5秒毎に明るくなり、最大明るさになった後に0になり終了します。

|
:doc:`問題 <q2-4>` へ戻る

:doc:`q2-5` へ進む
