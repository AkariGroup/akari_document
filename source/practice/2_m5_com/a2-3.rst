.. highlight:: python
   :linenothreshold: 10

******************************************
A2-3.デジタル出力の制御(回答編)
******************************************

回答
========

**Q2-3.テストヘッドのdout0のLEDを2秒ごとにONOFFするコードを書きましょう。**

以下はコード例です。問題文を満たしていれば、これと同じでなくても問題ありません。

ファイルの場所: akari_practice/2_m5_com/answer/a2-3_dout.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q2-3.テストヘッドのdout0のLEDを2秒ごとにONOFFするコードを書きましょう。
    ヒント1: set_dout (int pin_id, bool val)という関数でdoutの出力を制御できます。
            pin_idは0、valにTrue,Falseを入れることでON,OFFできます。
    ヒント2: 処理を停止するにはtime.sleep(sec)関数を使います。secに秒数を入れるとその時間だけ処理が停止します。
    """

    # M5と通信する際はm5serial_server_pyのライブラリをインポートする
    from m5serial_server_py.m5serial_server_py import M5SerialServer
    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time

    def main(args=None):
        """
        メイン関数
        """

        # M5SerialServerのインスタンスを作成する。
        m5 = M5SerialServer()

        ### ここから問題  ###
        while(True):
            # dout0をON
            m5.set_dout(0, True)
            # 2秒停止する
            time.sleep(2)
            # dout0をOFF
            m5.set_dout(0, False)
            # 2秒停止する
            time.sleep(2)
        ### ここまで  ###


    if __name__ == '__main__':
        main()


解説
========
**25行目:**

.. code-block:: python

    while(True):

dou0のON、OFFをループするので、while文を使います。終了するまで繰り返し続けるので、条件式はTrueです。

|
**26-27行目:**

.. code-block:: python

    # dout0をON
    m5.set_dout(0, True)

ヒントにもあったように、22行目でm5という名前でM5SerialServer()のインスタンスを作成しています。

この場合、M5SerialServer()に含まれる関数は **m5.関数名** という形で呼び出します。

ここではset_dout()関数を使います。dout0をONにするため、pin_idは0、valはTrueです。

|
**28-29行目:**

.. code-block:: python

    # 2秒停止する
    time.sleep(2)

2秒間停止するので、sleepを使います。

|
**30-31行目:**

.. code-block:: python

    # dout0をOFF
    m5.set_dout(0, False)

26-27行目と同様に、set_dout()を使います。

dout0をOFFにするため、pin_idは0、valはFalseです。

|
**32-33行目:**

.. code-block:: python

    # 2秒停止する
    time.sleep(2)

28-29行目と同様です。


実行結果
========
answerディレクトリ内のファイルを実行してみましょう

.. code-block:: bash

    python a2-3_dout.py

dout0のLEDが2秒毎にON、OFFします。

|
:doc:`問題 <q2-3>` へ戻る

:doc:`q2-4` へ進む
