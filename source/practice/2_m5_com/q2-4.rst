.. highlight:: python
   :linenothreshold: 10

******************************
Q2-4.PWM出力の制御
******************************


問題
========

| **Q2-4.テストヘッドのpwmout0のLEDを0-250まで10刻みで明るくしていく処理を書きましょう。**
| **明るさを変化させるごとに0.5秒停止する処理をいれてください。**
| **250になったら明るさを0にしてから終了してください。**

ファイルの場所: akari_practice/2_m5_com/question/q2-4_pwmout.py

.. code-block:: python

   #!/usr/bin/env python
   # -*- coding: utf-8 -*-

   """
   Q2-4.テストヘッドのpwmout0のLEDを0-250まで10刻みで明るくしていく処理を書きましょう。
      明るさを変化させるごとに0.5秒停止する処理をいれてください。
      250になったら明るさを0にしてから終了してください。
   ヒント1: set_pwmout (int pin_id, int val)という関数でpwmoutの出力を制御できます。
            pin_idは0、valに値を入れることでON,OFFできます。
   ヒント2: for文を使って0-250まで10ずつ値を変化させるループ処理を書いてみましょう。
            書き方はいくつかありますが、
               for i in range(start, end, step):
            を使うのがいいでしょう。これは数値iがstartからendまで、stepずつ増加するループ処理です。
   """

   # M5と通信する際はm5serial_server_pyのライブラリをインポートする。
   from m5serial_server_py.m5serial_server_py import M5SerialServer
   # sleep関数を使うためにtimeのライブラリをインポートする。
   import time


   def main() -> None:
      """
      メイン関数
      """

      # M5SerialServerのインスタンスを作成する。
      m5 = M5SerialServer()

      ### ここから問題  ###
      """(処理を書く)"""
      ### ここまで  ###


   if __name__ == '__main__':
      main()


デジタル出力に続き、PWM出力を制御する方法を学習しましょう。

ヒント
========

**今回使用するAKARIライブラリ1: set_pwmout()**

M5のデジタル出力を制御するには、M5SerialServerのset_pwmout()関数を使います。

   .. function:: bool **set_pwmout** (int pin_id, int val)
   | pwmoutの出力を変更。
   | - **引数**
   |  `int pin_id`: 0でpwmout0。
   |  `int val`: 0-255で0-3.3V出力。
   | - **返り値**
   |  `bool result`: M5へのserial送信完了でtrue。

この関数を使うと、任意のピンのPWM出力を変更できます。

今回は第一引数のpin_idが0、第二引数のvalを0から10ずつ増加させていきます。

この関数はQ2-1~Q2-3と同様、m5serial_server_pyのライブラリに含まれており、28行目でm5という名前でこのライブラリのインスタンスを作成しています。

これまでの問題と同じように、m5.set_pwmout()のようにこの関数を呼び出します。

|
**今回学習する項目1: for**

for文は、条件の範囲内で処理を反復する方法です。

for文の使い方はいくつかあるので、下記を参照してみてください。

https://www.python.jp/train/list/list_forloop.html

今回は`for i in range(start, end, step):`を使いましょう。

この場合変数iがstartから始まりendに達するまで、stepずつ増加します。

.. code-block:: python

   for i in range(1,9,2):
      print(i)
   #1,3,5,7,9が出力される。

この例を参考に、iを0〜250まで10ずつ増加させ、それをset_dout()のvalに与えましょう。

今回は、明るさを変化させるごとに0.5秒スリープする、ループから抜けたら明るさを0にする、という処理を入れるように指定されています。


答え合わせ
================
完成したら実行してみましょう

.. code-block:: bash

   python q2-4_pwmout.py

テストヘッドのpwmout0のLEDが0.5秒ごとにだんだん明るくなったらOKです。

|
:doc:`回答 <a2-4>` へ進む
