.. highlight:: python
   :linenothreshold: 10

******************************
A2-1.ボタン入力の取得(回答編)
******************************

回答
========

**Q2-1.ボタンAが押されたらコマンドラインに「ボタンAが押されています」と表示されるようにしましょう。**

以下はコード例です。問題文を満たしていれば、これと同じでなくても問題ありません。

ファイルの場所: /akari_practice/2_m5_com/answer/a2-1_button.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q2-1.ボタンAが押されたらコマンドラインに「ボタンAが押されています」と表示されるようにしましょう。
    ヒント1: get()関数を使うとM5の値が取得できます。
    ヒント2: if文を使って、ボタンAが押された場合だけコマンドラインに出力するようにしましょう。
    """

    # M5と通信する際はm5serial_server_pyのライブラリをインポートする。
    from m5serial_server_py.m5serial_server_py import M5SerialServer
    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time


    def main() -> None:
        """
        メイン関数
        """

        # M5SerialServerのインスタンスを作成する。
        m5 = M5SerialServer()

        ### ここから問題  ###
        # Ctrl + Cで終了するまでループし続ける
        while(True):
            m5_data = m5.get()
            # ボタンが押されているか判定。
            if(m5_data['button_a']):
                print("ボタンAが押されています")
            # 0.1秒停止処理を入れる。
            time.sleep(0.1)
        ### ここまで  ###


    if __name__ == '__main__':
        main()



解説
========
**27行目:**

.. code-block:: python

    m5_data = m5.get()

ヒントにもあったように、22行目でm5という名前でM5SerialServer()のインスタンスを作成しています。

この場合、M5SerialServer()に含まれる関数は **m5.関数名** という形で呼び出します。

ここではget()関数を使います。

|
**29行目:**

.. code-block:: python

    if(m5_data['button_a']):

**m5_data['button_a']の値がTrueだった場合** という条件式を書きます。

|
**30行目:**

.. code-block:: python

    print("ボタンAが押されています")

コマンドラインに出力するには、print()という関数を使います。

出力するメッセージは問題文にあるように、"ボタンAが押されています"というようにします。

|
**32行目:**

.. code-block:: python

    time.sleep(0.1)

32行目以降はループしており、M5のデータを取得→ボタンAが押されているか判定する、という処理を繰り返しています。

ループの最後に0.1秒のスリープを入れて、ループ速度の調整をしています。


実行結果
========
answerディレクトリ内のファイルを実行してみましょう

.. code-block:: bash

    python a2-1_button.py

M5のボタンAを押した時に下記のようにコマンドラインに出力されます。

::

    ボタンAが押されています

Tips
========

その他のボタンを取得するには？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

ボタンB、ボタンCも同様に取得できます。30行目以下に下記を追加してみましょう。

.. code-block:: python

    if(m5_data['button_b']):
        print("ボタンBが押されています")
    if(m5_data['button_c']):
        print("ボタンCが押されています")

ボタンA~Cのステータスを同時に取得できるようになります。

|
:doc:`問題 <q2-1>` へ戻る

:doc:`q2-2` へ進む
