.. highlight:: python
   :linenothreshold: 10

******************************
Q1-2.モータの制御
******************************


問題
========

**Q1-2. Q1-1で取得した関節名を使って、ヘッドを左に45°向かせてみましょう。**

ファイルの場所: akari_practice/1_motor/question/q1-2_move_joint.py

.. code-block:: python

   #!/usr/bin/env python
   # -*- coding: utf-8 -*-

   """
   Q1-2. Q1-1で取得した関節名を使って、ヘッドを左に45°向かせてみましょう。
   ヒント1: set_goal_position (dict)という関数を使います。
            引数にはdict1を使いましょう。dict1には動かしたい関節名のリストと、目標角度のリストを入れます。
   ヒント2: 関節角度はradで入れます。45°をラジアンに変換した値を入れましょう。
   """

   # sleep関数を使うためにtimeのライブラリをインポートする。
   import time
   # モータ制御の際はakari_controllerのライブラリをインポートする
   from akari_controller.akari_controller import AkariController

   def main(args=None):
      """
      メイン関数
      """

      # AkariControllerのインスタンスを作成する。
      akari = AkariController()

      ### ここから問題  ###
      dict1 = {}
      dict1["joint_names"] = """(関節名のリスト)"""
      dict1["values"] = """(目標角度のリスト)""""
      """(モータを動かす関数)""""
      ### ここまで  ###
      # 1秒待つ
      time.sleep(1)
      # 現在位置を取得してコマンドラインに表示
      position = akari.get_present_position(["pan", "tilt"])
      print("現在位置は" + str(position) + "です。")

   if __name__ == '__main__':
      main()

実際にモータを動かしてみましょう。
まずは左に45°動かしてみます。


ヒント
========

|
**今回学習する項目1: dict**

25行目でdict1を定義しています。これは **dict** 型という型の変数です。

dictとは、キーというタイトルのようなものと、それに対応する値が格納されたものです。

詳しくは下記を参照してください。

https://www.python.jp/train/dict/index.html

今回でいうと、26行目

.. code-block:: python

      dict1["joint_names"] = """(関節名のリスト)"""

の"joint_names"がキーで、これに対応する値を入れる処理を穴埋めで入れることになります。

27行目

.. code-block:: python

      dict1["values"] = """(目標角度のリスト)""""

の"values"もキーで、ここに目標角度のリストを値として入れます。


**今回使用するAKARIライブラリ1: set_goal_position()**

モータを動かすには **set_goal_position()** という関数を使います。

   .. function:: list(bool) **set_goal_position** (dict config_dict)
   | 関節の目標位置を指定。
   | - **引数**
   |  `dict config_dict`:
   |   `list(str) joint_names`:関節名のリスト
   |   `list(float) values`: "joint_names"のリストに対応した要素の目標位置。実行するとこの位置へ移動する。単位はrad。
   | - **返り値**
   |   `list(bool) success_list`: 各要素の実行結果。Trueで成功、Falseで失敗。


この関数の引数に関節名のリストを入れます。

25行目で作成したdict1を引数として使いましょう。

今回は左右方向のモータだけ動かせばいいので、リストの中の要素は1個だけです。

Q1-1で左右方向の関節名を取得したと思います。その名前を26行目のリストの要素として入れればOKです。

27行目には45°をラジアンに変換した値を入れましょう。

この関数は前問と同じくakari_controllerのライブラリに含まれており、22行目でakariという名前でこのライブラリを定義しています。

こういう場合、このライブラリの関数は **akari.set_goal_position(dict1)** のように呼び出します。

答え合わせ
================
完成したら実行してみましょう

.. code-block:: bash

   python q1-2_move_joint.py

AKARIのヘッドが左45°の方向を向いて、コマンドラインに現在の関節角が表示されたら成功です。

:doc:`回答 <a1-2>` へ進む
