.. highlight:: python
    :linenothreshold: 10

******************************
A1-2.モータの制御(回答編)
******************************

回答
========

**Q1-2. Q1-1で取得した関節名を使って、ヘッドを左に45°向かせてみましょう。**

以下はコード例です。問題文を満たしていれば、これと同じでなくても問題ありません。

ファイルの場所: akari_practice/1_motor/answer/a1-2_move_joint.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q1-2. Q1で取得した関節名を使って、ヘッドを左に45°向かせてみましょう。
    ヒント1: set_goal_position (dict)という関数を使います。
            引数にはdict1を使いましょう。dict1には動かしたい関節名のリストと、目標角度のリストを入れます。
    ヒント2: 関節角度はradで入れます。45°をラジアンに変換した値を入れましょう。
    """

    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time
    # モータ制御の際はakari_controllerのライブラリをインポートする
    from akari_controller.akari_controller import AkariController, ComDictFloat


    def main() -> None:
        """
        メイン関数
        """

        # AkariControllerのインスタンスを作成する。
        akari = AkariController()

        ### ここから問題  ###
        dict1: ComDictFloat = {}
        dict1["joint_names"] = ["pan"]
        dict1["values"] = [0.785]
        akari.set_goal_position(dict1)
        ### ここまで  ###
        # 1秒待つ
        time.sleep(1)
        # 現在位置を取得してコマンドラインに表示
        position = akari.get_present_position(["pan", "tilt"])
        print("現在位置は" + str(position) + "です。")


    if __name__ == '__main__':
        main()



解説
========
**27行目:**

.. code-block:: python

        dict1["joint_names"] = ["pan"]

Q1-1で、左右方向の関節名は"pan"だということが分かっています。

今回は左右方向だけ動かせばいいので、リスト内に"pan"だけを入れます。

|
**28行目:**

.. code-block:: python

        dict1["values"] = [0.785]

45°をラジアンで表すと0.785...になります。今回はこの値をリストに入れて、左右方向の角度として渡します。

|
**29行目:**

.. code-block:: python

        akari.set_goal_position(dict1)

dict1を引数として、set_goal_position()を呼出します。

Q1-1と同じく、22行目でakariという名前でakari_controllerのライブラリを定義しています。

この場合、akari_controllerに含まれる関数は***akari.関数名***という形で呼び出します。


実行結果
========
answerディレクトリ内のファイルを実行してみましょう

.. code-block:: bash

   python a1-2_move_joint.py

下記のようにコマンドラインに出力されるはずです。

::

    現在位置は[0.7625746270252147, -0.006137421545474565]です。

表示されたリストの１つ目の値が左右方向の角度、２つ目の値が上下方向の角度です。

この方法では、指令値に対して若干の角度誤差が出てしまい、ピッタリ指令値通りの値にはなりません。

上記と同じ値にもならないと思いますが、表示されたリストの１つ目の変数が0.785付近であればOKです。


Tips
========

上下左右同時に動かすには？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

今回の問題では、左右方向だけ動かしましたが、上下にも同時に動かすにはどうすればいいでしょうか。

引数のリストの中に上下方向の指令値も入れれば可能です。

.. code-block:: python

    dict1: ComDictFloat = {}
    dict1["joint_names"] = ["pan", "tilt"]
    dict1["values"] = [0.785, 0.3]
    akari.set_goal_position(dict1)

"joint_names"のリストの２つ目の要素として上下方向の関節名"tilt"を追加しました。

これを使ってset_goal_position()を呼び出すと、左に0.785rad、上に0.3radの方向を向くはずです。試してみましょう。

また、上下方向だけ動かしたい場合は、下記のようにすればOKです。

.. code-block:: python

    dict1: ComDictFloat = {}
    dict1["joint_names"] = ["tilt"]
    dict1["values"] = [0.3]
    akari.set_goal_position(dict1)

これで上に0.3radの方向を向くはずです。

|
:doc:`問題 <q1-2>` へ戻る

:doc:`q1-3` へ進む
