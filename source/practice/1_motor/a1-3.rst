.. highlight:: python
    :linenothreshold: 10

******************************
A1-3.モータ位置の取得(回答編)
******************************

回答
========

**Q1-3. AKARIが動いたあとの、現在位置を取得してコマンドラインに表示しましょう。**

以下はコード例です。問題文を満たしていれば、これと同じでなくても問題ありません。

ファイルの場所: akari_practice/1_motor/answer/a1-3_get_position.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q1-3. AKARIが動いたあとの、現在位置を取得してコマンドラインに表示しましょう。
    ヒント1: get_present_position (list(str) joint_name_list)という関数を使います。
            Q2で使っているので、参考にしてください。
    """

    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time
    # モータ制御の際はakari_controllerのライブラリをインポートする
    from akari_controller.akari_controller import AkariController

    def main() -> None:
    """
    メイン関数
    """

    # AkariControllerのインスタンスを作成する。
    akari = AkariController()
    # 両方のモータ速度を5rad/sに変更する。
    akari.set_profile_velocity({"joint_names": ["pan", "tilt"],
                            "values": [5, 5]})
    # AKARIを目標位置に移動する。
    akari.set_goal_position({"joint_names": ["pan", "tilt"],
                            "values": [-0.5, 0.2]})
    # 1秒待つ
    time.sleep(1)
    ### ここから問題  ###
    position = akari.get_present_position(["pan", "tilt"])
    print(position)
    ### ここまで  ###


    if __name__ == '__main__':
        main()




解説
========
**32行目:**

.. code-block:: python

        position = akari.get_present_position(["pan", "tilt"])

これまでと同じく、akari.~という形でget_goal_position()を呼び出します。

"pan", "tilt"の両方をリストにして引数にすることで、両方の関節の角度が返り値のリストに入ります。

|
**33行目:**

.. code-block:: python

        print(position)

print()関数で位置をコマンドラインに出力します。

実行結果
========
answerディレクトリ内のファイルを実行してみましょう

.. code-block:: bash

    python a1-3_get_position.py

ヘッドが動いたあと下記のようにコマンドラインに出力されるはずです。

::

    [-0.47718452516064747, 0.17951958020513104]

27行目でヘッドを[-0.5, 0.2]に動かすように指令を出しています。

表示されたリストの１つ目の値が左右方向の角度、２つ目の値が上下方向の角度です。

この方法では、指令値に対して若干の角度誤差が出てしまい、ピッタリ指令値通りの値にはなりません。

上記と同じ値にもならないと思いますが、表示されたリストの値が[-0.5, 0.2]付近であればOKです。


Tips
========

モータ速度を指定するには？
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**今回使用したAKARIライブラリ1: set_profile_velocity()**

モータ速度を変更するには **set_profile_velocity()** という関数を使います。

    .. function:: list(bool) **set_profile_velocity** (dict config_dict)
    | 関節の速度を指定。
    | - **引数**
    |  `dict config_dict`:
    |   `list(str) joint_names`:関節名のリスト
    |   `list(float) values`: "joint_names"のリストに対応した要素の速度。単位はrad/s。
    | - **返り値**
    |   `list(bool) success_list`: 各要素の実行結果。Trueで成功、Falseで失敗。

関節名と速度rad/sをdictに入れて渡すと、以降は更新するまでその速度でモータが動くようになります。

24行目で、

.. code-block:: python

    akari.set_profile_velocity({"joint_names": ["pan", "tilt"],
                            "values": [5, 5]})

のように書かれています。この場合、pan、tilt共に5rad/sになります。

また、ここでは引数にdictを直書きしています。これは下記と同じ意味になります。

.. code-block:: python

    dict1 = {}
    dict1["joint_names"] = ["pan", "tilt"]
    dict1["values"] = [5, 5]
    akari.set_profile_velocity(dict1)

|
:doc:`問題 <q1-3>` へ戻る

:doc:`q1-4` へ進む
