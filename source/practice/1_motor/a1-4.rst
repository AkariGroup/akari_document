.. highlight:: python
    :linenothreshold: 10

******************************
A1-4.おじぎをする(回答編)
******************************

回答
========

**Q1-4. 下40°を向く→3秒待つ→上20°を向く→３秒待つ→下40°を向く…という動作を繰り返すコードを書きましょう。**

以下はコード例です。問題文を満たしていれば、これと同じでなくても問題ありません。

ファイルの場所: akari_practice/1_motor/answer/a1-4_bow.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q1-4. 下40°を向く→3秒待つ→上20°を向く→３秒待つ→下40°を向く…という動作を繰り返すコードを書きましょう。
    ヒント1: while(True):の中に書かれたコードはループします。この中に１周期分の処理を書きましょう。
    ヒント2: 処理を停止するにはtime.sleep(sec)関数を使います。secに秒数を入れるとその時間だけ処理が停止します。
    """

    # モータ制御の際はakari_controllerのライブラリをインポートする
    from akari_controller.akari_controller import AkariController, ComDictFloat
    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time


    def main() -> None:
    """
    メイン関数
    """

    # AkariControllerのインスタンスを作成する。
    akari = AkariController()
    # 両方のモータ速度を5rad/sに変更する。
    akari.set_profile_velocity({"joint_names": ["pan", "tilt"],
                            "values": [5, 5]})
    ### ここから問題  ###
    while(True):
        # 下40°を向く
        dict1: ComDictFloat = {}
        dict1["joint_names"] = ["tilt"]
        dict1["values"] = [-0.698]
        akari.set_goal_position(dict1)
        # 3秒停止する
        time.sleep(3)
        # 上20°を向く
        dict1 = {}
        dict1["joint_names"] = ["tilt"]
        dict1["values"] = [0.349]
        akari.set_goal_position(dict1)
        # 3秒停止する
        time.sleep(3)
    ### ここまで  ###


    if __name__ == '__main__':
        main()


解説
========
**29-32行目:**

.. code-block:: python

        dict1: ComDictFloat = {}
        dict1["joint_names"] = ["tilt"]
        dict1["values"] = [-0.698]
        akari.set_goal_position(dict1)

Q1-2と同じやり方で、set_goal_position()でモータを制御します。

今回は上下方向に動かしたいので、dict1の"joint_names"を"tilt"、"values"を-40°をradにした-0.698にします。

これを引数にしてset_goal_position()を呼び出します。

|
**34行目:**

.. code-block:: python

        time.sleep(3)

sleep()関数で3秒停止します。引数は秒数なので3を入れます。

|
**36-39行目:**

.. code-block:: python

        dict1 = {}
        dict1["joint_names"] = ["tilt"]
        dict1["values"] = [0.349]
        akari.set_goal_position(dict1)

28-31行目と同じやり方です。dict1を再度利用して、"values"を20°をradにした0.349にします。

|
**41行目:**

.. code-block:: python

        time.sleep(3)

33行目と同じです。


実行結果
========
answerディレクトリ内のファイルを実行してみましょう

.. code-block:: bash

        python a1-4_bow.py

下40°を向く→3秒待つ→上20°を向く→３秒待つ→下40°を向く…という動作を繰り返します。

|
:doc:`問題 <q1-4>` へ戻る

:doc:`q1-5` へ進む
