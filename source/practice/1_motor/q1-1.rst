.. highlight:: python
   :linenothreshold: 10

******************************
Q1-1.関節名の取得
******************************


問題
========

**Q1-1.ヘッドの２軸の関節名を取得して、コマンドラインに表示してみましょう。**

ファイルの場所: akari_practice/1_motor/question/q1-1_joints_name.py

.. code-block:: python

   #!/usr/bin/env python
   # -*- coding: utf-8 -*-

   """
   Q1-1.ヘッドの２軸の関節名を取得して、コマンドラインに表示してみましょう。

   ヒント: get_joint_names (void)という関数を使うと、list型で名前が返ってきます。
         このlistをprintしてみましょう。
   """

   # モータ制御の際はakari_controllerのライブラリをインポートする
   from akari_controller.akari_controller import AkariController


   def main() -> None:
      """
      メイン関数
      """

      # AkariControllerのインスタンスを作成する。
      akari = AkariController()

      ### ここから問題  ###
      joints_name = """(関節角を取得する式)"""
      """(joints_nameをコマンドラインに出力する処理)"""
      ### ここまで  ###


   if __name__ == '__main__':
      main()

モータ制御をする前に、制御する関節の名前を取得する関数の使い方を覚えましょう。

ヒント
========

**今回使用するAKARIライブラリ1: get_joint_names()**

関節名を取得するにはget_joint_names()という関数を使います。

   .. function:: list(str) **get_joint_names** (void)
   | 関節名を取得する。
   | - **引数**
   |  なし
   | - **返り値**
   |  `list(str) joint_name_list`: 関節名の一覧

この関数を呼び出すと、list型に左右の軸、上下の軸の関節名が格納されて返ってきます。

この関数はakari_controllerのライブラリに含まれており、21行目でakariという名前でこのライブラリを定義しています。

こういう場合、このライブラリの関数はakari.get_joint_names()のように呼び出します。


|
**今回学習する項目1: list**

get_joint_names()は、関節名を **list** で取得します。

listとは、一つの値ではなく、複数の値を格納する変数です。

詳しくは下記を参照してください。

https://www.python.jp/train/list/list.html


|
**今回学習する項目2: print()**

コマンドラインに出力する関数は **print()** です。

print()の引数に出力したい変数を入れると、その値をコマンドライン出力してくれます。

詳しくは下記を参照してください。

https://www.python.jp/train/string/print_func.html


答え合わせ
================
完成したら実行してみましょう

.. code-block:: bash

   python q1-1_joints_name.py

コマンドラインに軸名が表示されたら成功です。

:doc:`回答 <a1-1>` へ進む
