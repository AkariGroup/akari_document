.. highlight:: python
    :linenothreshold: 10

******************************
A1-5.ランダムに動く(回答編)
******************************

回答
========

**Q1-5. 3秒に１回パン、チルトで-0.5rad~0.5radのランダムな角度を２つ作り、その方向を向くコードを書きましょう。。**

以下はコード例です。問題文を満たしていれば、これと同じでなくても問題ありません。

ファイルの場所: akari_practice/1_motor/answer/a1-5_random.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q1-5. 3秒に1回パン、チルトで-0.5rad~0.5radのランダムな角度を２つ作り、その方向を向くコードを書きましょう。
    ヒント1: Q4を参考に、while文の中の処理を書き直しましょう。
    ヒント2: ランダムな関数を生成するには、random.uniform()という関数を使います。
                import random
                val = random.uniform(min,max)
            でmin以上max以下の乱数が生成され、valとして返ってきます。
            これを2回使って、パンとチルトの角度を作りましょう。
    """
    ### ここから問題  ###

    # モータ制御の際はakari_controllerのライブラリをインポートする
    from akari_controller.akari_controller import AkariController, ComDictFloat
    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time
    # 乱数生成用のライブラリをインポートする。
    import random


    def main() -> None:
        """
        メイン関数
        """

        # AkariControllerのインスタンスを作成する。
        akari = AkariController()
        while(True):
            # -0.5~0.5のランダムな角度をpan,tiltそれぞれ生成
            pan_angle = random.uniform(-0.5, 0.5)
            tilt_angle = random.uniform(-0.5, 0.5)
            # 問題文に指定はないが、一応print。
            print("pan: " + str(pan_angle) + "tilt: " + str(tilt_angle))
            # 生成したランダムな方向を向く
            dict1: ComDictFloat = {}
            dict1["joint_names"] = ["pan", "tilt"]
            dict1["values"] = [pan_angle, tilt_angle]
            akari.set_goal_position(dict1)
            # 3秒停止する
            time.sleep(3)


    if __name__ == '__main__':
        main()

    ### ここまで  ###


解説
========
**14-19行目:**

.. code-block:: python

    # モータ制御の際はakari_controllerのライブラリをインポートする
    from akari_controller.akari_controller import AkariController
    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time
    # 乱数生成用のライブラリをインポートする。
    import random

最初に必要なモジュールをインポートします。

1つ目はAKARIのヘッドを動かすのに必要なAkariController

2つ目はsleepを使うために必要なtime

3つ目はuniformを使うために必要なrandomです。


これを引数にしてset_goal_position()を呼び出します。

|
**22行目:**

.. code-block:: python

    def main() -> None:

メイン関数を定義します。この中身が実行されます。

|
**27-28行目:**

.. code-block:: python

    # AkariControllerのインスタンスを作成する。
    akari = AkariController()

AkariController()のインスタンスをakariという名前で作成します。

|
**29行目:**

.. code-block:: python

        while(True):

3秒に１回動作するコードなので、while()でループさせます。

条件式はTrueなので、終了するまでループし続けます。

|
**30-32行目:**

.. code-block:: python

        # -0.5~0.5のランダムな角度をpan,tiltそれぞれ生成
        pan_angle = random.uniform(-0.5, 0.5)
        tilt_angle = random.uniform(-0.5, 0.5)

pan_angleでpan方向の乱数、tilt_angleでtilt方向の乱数を作成します。

乱数生成はrandom.uniform(min,max)を使います。-0.5~0.5なので、minが-0.5でmaxが0.5です。

|
**33-34行目:**

.. code-block:: python

        # 問題文に指定はないが、一応print。
        print("pan: " + str(pan_angle) + "tilt: " + str(tilt_angle))

特に指定はないですが、30-32行目で作成した乱数をコマンドラインに表示しておきます。

str(数値)で数値を文字列に変換できます。文字列どうしであれば+で結合できるので、一つの文字列としてprintできます。

|
**35-39行目:**

.. code-block:: python

    # 生成したランダムな方向を向く
    dict1: ComDictFloat = {}
    dict1["joint_names"] = ["pan", "tilt"]
    dict1["values"] = [pan_angle, tilt_angle]
    akari.set_goal_position(dict1)

Q1-2やQ1-4と同じ方法で、指令値をdict1に入れてset_goal_position()で指令します。

panとtilt同時に動かすので、"joint_names"のリストは["pan", "tilt"]、"values"のリストはそれぞれ作成した乱数[pan_angle, tilt_angle]を与えます。

|
**40-41行目:**

.. code-block:: python

    # 3秒停止する
    time.sleep(3)

3秒に1回動かすので、ここでは3秒のsleepを入れます。

|
**40-41行目:**

.. code-block:: python

    if __name__ == '__main__':
        main()

この文法を入れておくと、ファイルがコマンドラインからスクリプトとして実行された場合にのみ処理を実行してくれます。


実行結果
========
answerディレクトリ内のファイルを実行してみましょう

.. code-block:: bash

   python a1-5_random.py

AKARIのヘッドが3秒に１回ランダムな方向を向く挙動を繰り返します。

|
:doc:`問題 <q1-5>` へ戻る

:doc:`../2_m5_com/main` へ進む
