.. highlight:: python
    :linenothreshold: 10


****************************************
Q3-2.ディスプレイテキストの表示
****************************************


問題
========

**Q3-2.M5のディスプレイの真中中央に"こんにちは"という文字を表示してみましょう。**

ファイルの場所: akari_practice/3_m5_display/question/q3-2_display_text.py

.. code-block:: python

    #!/usr/bin/env python
    # -*- coding: utf-8 -*-

    """
    Q3-2.M5のディスプレイの真中中央に"こんにちは"という文字を表示してみましょう。
    ヒント1: 文字を表示するにはset_display_text()という関数を使います。
                この関数は引数が多くやや複雑です。
                まずはコメントを読みながら穴埋めをし、コードを実行してみましょう。
                その後、変数を色々変えてどう表示が変わるか試してみましょう。
    ヒント2: 文字と背景の色は、画面の色変更と同じように黒なら'black'、白なら'white'を入れればOKです。
    """

    # M5と通信する際はm5serial_server_pyのライブラリをインポートする
    from m5serial_server_py.m5serial_server_py import M5SerialServer
    # sleep関数を使うためにtimeのライブラリをインポートする。
    import time

    def main(args=None):
        """
        メイン関数
        """

        # M5SerialServerのインスタンスを作成する。
        m5 = M5SerialServer()

        ### ここから問題  ###
        # textは'こんにちは'
        text = """(表示したい文字を入力)"""
        # 左右表示位置を0-320で座標指定。0が左。-999を入れると真中揃え。999を入れると右揃え
        pos_x = """(真ん中の数値を入力)"""
        # 上下表示位置を0-240で座標指定。0が上。-999を入れると中央揃え。999を入れると下揃え
        pos_y = """(中央の数値を入力)"""
        # 文字サイズは3
        size = 3
        # 文字色は黒
        text_color = """(黒を指定)"""
        # 背景色は白
        back_color = """(白を指定)"""
        # 背景をリセット
        refresh = True
        # set_display_textを実行
        result = m5.set_display_text(text, pos_x, pos_y, size, text_color, back_color, refresh)
        ### ここまで  ###


    if __name__ == '__main__':
        main()


ディスプレイにテキストを表示する方法を学習しましょう。

ヒント
========

**今回使用するAKARIライブラリ1: set_display_text()**

M5のディスプレイにテキストを表示するには、M5SerialServerのset_display_text()関数を使います。

    .. function:: bool **set_display_text** (str text, int pos_x, int pos_y, int size, str text_color, str back_color, bool reflesh)
    | M5のディスプレイに文字を表示。
    | - **引数**
    |  `str text`: 表示される文字列。文字列最後に空白を挿入したい場合は空白の後ろに"\\n"をつけること。
    |  `int pos_x`: x方向の開始ピクセルを0-320で指定。画面左端が0。文字列上端がここで指定した位置に描画される。
    |   -999で画面中央揃え、999で画面右揃えとなる。
    |  `int pos_y`: y方向の開始ピクセルを0-240で指定。画面上端が0。文字列上端がここで指定した位置に描画される。
    |   -999で画面中央揃え、999で画面下揃えとなる。
    |  `int size`: 文字サイズを1-7の7段階で指定。0の場合前回表示時の文字サイズをそのまま使う。
    |  `str text_color`: テキスト色を名前で指定。使用可能な色名リストは後述。リストにない文字列の場合(空白など)の場合は前回値をそのまま使用。
    |  `str back_color`: テキストの背景色を名前で指定。使用可能な色名リストは後述。リストにない文字列の場合(空白など)の場合は現在の背景色をそのまま使用。
    |  `bool refresh`: trueの場合画面全体を現在の背景色で更新する。falseの場合は現在の表示を維持しつつ、指定表示範囲のみ更新する。
    | - **返り値**
    |  `bool result`: M5へのserial送信完了でtrue。

この関数を呼び出すことで、テキストを任意の色、場所、サイズで表示することができます。

使える色名の一覧は :doc:`こちら <../../spec/soft_base_noros>` を参照してください。

引数が多く少し複雑ですが、今回は引数部分のみ埋める問題ですので、一つ一つの項目を穴埋めした上で42行目の使い方を参考にしましょう。

この関数はm5serial_server_pyのライブラリに含まれており、24行目でm5いう名前でこのライブラリのインスタンスを作成しています。

なので42行目のように、m5.set_display_text()のようにこの関数を呼び出します。


答え合わせ
================
完成したら実行してみましょう

.. code-block:: bash

   python q3-2_display_text.py

画面に「こんにちは」と表示されればOKです。

|
:doc:`回答 <a3-2>` へ進む
